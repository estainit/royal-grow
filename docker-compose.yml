version: '3.8'

services:
  # PostgreSQL database
  db:
    build:
      context: .
      dockerfile: dockerfile_postgresql
      args:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - rgnetwork
    restart: unless-stopped

  # Node.js server
  backend:
    build:
      context: .
      dockerfile: dockerfile_backend
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
    ports:
      - "3100:3100"  # Expose backend port
    volumes:
      - ./backend:/backend
      - /backend/node_modules
    depends_on:
      - db
    networks:
      - rgnetwork
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3100/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React application
  frontend:
    build:
      context: .
      dockerfile: dockerfile_frontend
    ports:
      - "3200:3200"  # Expose frontend port
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=https://api.cryptafe.com
    depends_on:
      - backend
    networks:
      - rgnetwork
    restart: unless-stopped

networks:
  rgnetwork:
    driver: bridge

volumes:
  postgres_data: